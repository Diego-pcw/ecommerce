import api from "./api";
import { type AxiosResponse } from "axios";

/**
 * Interface principal de Categor칤a
 */
export interface Categoria {
  id: number;
  nombre: string;
  descripcion?: string;
  estado?: "activo" | "inactivo";
  created_at?: string;
  updated_at?: string;
}

/**
 * Estructura para crear o actualizar una categor칤a
 */
export interface CategoriaInput {
  nombre: string;
  descripcion?: string;
  estado?: "activo" | "inactivo";
}

/**
 * Par치metros opcionales para filtros y paginaci칩n
 */
export interface CategoriaQuery {
  estado?: "activo" | "inactivo";
  search?: string;
  sort_by?: string;
  sort_dir?: "asc" | "desc";
  per_page?: number;
  page?: number;
}

/**
 * Servicio centralizado para la gesti칩n de categor칤as
 */
class CategoriaService {
  /** 游댳 Obtener todas las categor칤as con filtros, orden y paginaci칩n */
  async obtenerTodas(params?: CategoriaQuery): Promise<any> {
    const res: AxiosResponse<any> = await api.get("/categorias", { params });
    return res.data;
  }

  /** 游댳 Obtener una categor칤a espec칤fica (p칰blico) */
  async obtenerPorId(id: number): Promise<Categoria> {
    const res: AxiosResponse<Categoria> = await api.get(`/categorias/${id}`);
    return res.data;
  }

  /** 游댲 Crear nueva categor칤a (solo admin) */
  async crear(data: CategoriaInput): Promise<{ message: string; data: Categoria }> {
    const res: AxiosResponse<{ message: string; data: Categoria }> = await api.post("/categorias", data);
    return res.data;
  }

  /** 游댲 Actualizar categor칤a (solo admin) */
  async actualizar(
    id: number,
    data: Partial<CategoriaInput>
  ): Promise<{ message: string; data: Categoria }> {
    const res: AxiosResponse<{ message: string; data: Categoria }> = await api.put(`/categorias/${id}`, data);
    return res.data;
  }

  /** 游댲 Eliminar categor칤a (solo admin) */
  async eliminar(id: number): Promise<{ message: string }> {
    const res: AxiosResponse<{ message: string }> = await api.delete(`/categorias/${id}`);
    return res.data;
  }
}

export default new CategoriaService();
